---
convention:
  commitTypes:
  - feat     # Commits, that add or remove a new feature to the API or UI
  - fix      # Commits, that fix a API or UI bug of a preceded feat commit
  - refactor # Commits, that rewrite/restructure your code, however do not change any API or UI behaviour
  - perf     # Commits are special `refactor` commits, that improve performance
  - style    # Commits, that do not affect the meaning (white-space, formatting, missing semi-colons, etc)
  - test     # Commits, that add missing tests or correcting existing tests
  - build    # Commits, that affect build components like build tool, ci pipeline, dependencies, project version, ...
  - docs     # Commits, that affect documentation only 
  - chore    # Miscellaneous commits e.g. modifying `.gitignore`
  - ci       # Commits, that affect continues integration process 
  - merge
  - revert
  commitScopes: []
  releaseTagGlobPattern: "[0-9]*.[0-9]*.[0-9]*"
changelog:
  commitTypes:
  - feat
  - fix
  - perf
  includeInvalidCommits: false
  commitIgnoreRegexPattern: "^WIP "
  headlines:
    feat: Features
    fix: Bug Fixes
    perf: Performance Improvements
    merge: Merges
    breakingChange: BREAKING CHANGES
